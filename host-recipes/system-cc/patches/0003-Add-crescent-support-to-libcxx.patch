From f490ecaffc2a05db1d7b669cddc3c7f861c8005e Mon Sep 17 00:00:00 2001
From: Qwinci <32550582+Qwinci@users.noreply.github.com>
Date: Wed, 1 Jan 2025 15:04:24 +0200
Subject: [PATCH 3/3] Add crescent support to libcxx

---
 libcxx/include/__config                          |  3 ++-
 libcxx/include/__configuration/platform.h        |  2 +-
 libcxx/include/__cxx03/__atomic/contention_t.h   |  2 +-
 libcxx/include/__cxx03/__config                  |  3 ++-
 .../include/__cxx03/__configuration/platform.h   |  2 +-
 libcxx/src/atomic.cpp                            | 16 ++++++++++++++++
 libcxx/src/experimental/tzdb.cpp                 |  2 +-
 libcxx/src/include/config_elast.h                |  2 ++
 8 files changed, 26 insertions(+), 6 deletions(-)

diff --git a/libcxx/include/__config b/libcxx/include/__config
index 9db00cd0c..dfe23ad6d 100644
--- a/libcxx/include/__config
+++ b/libcxx/include/__config
@@ -821,7 +821,8 @@ typedef __char32_t char32_t;
         defined(__APPLE__) ||                                                                                          \
         defined(__MVS__) ||                                                                                            \
         defined(_AIX) ||                                                                                               \
-        defined(__EMSCRIPTEN__)
+        defined(__EMSCRIPTEN__) ||                                                                                     \
+        defined(__crescent__)
 // clang-format on
 #      undef _LIBCPP_HAS_THREAD_API_PTHREAD
 #      define _LIBCPP_HAS_THREAD_API_PTHREAD 1
diff --git a/libcxx/include/__configuration/platform.h b/libcxx/include/__configuration/platform.h
index 2a92ce209..da78c7d03 100644
--- a/libcxx/include/__configuration/platform.h
+++ b/libcxx/include/__configuration/platform.h
@@ -35,7 +35,7 @@
 #  include <features.h>
 #endif
 
-#if defined(__linux__)
+#if defined(__linux__) || defined(__crescent__)
 #  if defined(__GLIBC_PREREQ)
 #    define _LIBCPP_GLIBC_PREREQ(a, b) __GLIBC_PREREQ(a, b)
 #  else
diff --git a/libcxx/include/__cxx03/__atomic/contention_t.h b/libcxx/include/__cxx03/__atomic/contention_t.h
index 1f069b01b..5a0e4c4c8 100644
--- a/libcxx/include/__cxx03/__atomic/contention_t.h
+++ b/libcxx/include/__cxx03/__atomic/contention_t.h
@@ -19,7 +19,7 @@
 
 _LIBCPP_BEGIN_NAMESPACE_STD
 
-#if defined(__linux__) || (defined(_AIX) && !defined(__64BIT__))
+#if defined(__linux__) || defined(__crescent__) || (defined(_AIX) && !defined(__64BIT__))
 using __cxx_contention_t = int32_t;
 #else
 using __cxx_contention_t = int64_t;
diff --git a/libcxx/include/__cxx03/__config b/libcxx/include/__cxx03/__config
index 6f7729238..f92e2e8c6 100644
--- a/libcxx/include/__cxx03/__config
+++ b/libcxx/include/__cxx03/__config
@@ -817,7 +817,8 @@ typedef __char32_t char32_t;
         defined(__APPLE__) ||                                                                                          \
         defined(__MVS__) ||                                                                                            \
         defined(_AIX) ||                                                                                               \
-        defined(__EMSCRIPTEN__)
+        defined(__EMSCRIPTEN__)  ||                                                                                    \
+        defined(__crescent__)
 // clang-format on
 #      define _LIBCPP_HAS_THREAD_API_PTHREAD
 #    elif defined(__Fuchsia__)
diff --git a/libcxx/include/__cxx03/__configuration/platform.h b/libcxx/include/__cxx03/__configuration/platform.h
index 27f68d04e..044cef914 100644
--- a/libcxx/include/__cxx03/__configuration/platform.h
+++ b/libcxx/include/__cxx03/__configuration/platform.h
@@ -31,7 +31,7 @@
 #endif
 
 // Need to detect which libc we're using if we're on Linux.
-#if defined(__linux__)
+#if defined(__linux__) || defined(__crescent__)
 #  include <features.h>
 #  if defined(__GLIBC_PREREQ)
 #    define _LIBCPP_GLIBC_PREREQ(a, b) __GLIBC_PREREQ(a, b)
diff --git a/libcxx/src/atomic.cpp b/libcxx/src/atomic.cpp
index c1af8d6f9..dd67c3256 100644
--- a/libcxx/src/atomic.cpp
+++ b/libcxx/src/atomic.cpp
@@ -41,6 +41,11 @@
 // OpenBSD has no indirect syscalls
 #  define _LIBCPP_FUTEX(...) futex(__VA_ARGS__)
 
+#elif defined(__crescent__)
+
+#  include <crescent/syscalls.h>
+#  include <crescent/syscall.h>
+
 #else // <- Add other operating systems here
 
 // Baseline needs no new headers
@@ -63,6 +68,17 @@ static void __libcpp_platform_wake_by_address(__cxx_atomic_contention_t const vo
   _LIBCPP_FUTEX(__ptr, FUTEX_WAKE_PRIVATE, __notify_one ? 1 : INT_MAX, 0, 0, 0);
 }
 
+#elif defined(__crescent__)
+
+static void
+__libcpp_platform_wait_on_address(__cxx_atomic_contention_t const volatile* __ptr, __cxx_contention_t __val) {
+  syscall(SYS_FUTEX_WAIT, __ptr, __val, 2UL * 1000 * 1000 * 1000);
+}
+
+static void __libcpp_platform_wake_by_address(__cxx_atomic_contention_t const volatile* __ptr, bool __notify_one) {
+  syscall(SYS_FUTEX_WAKE, __ptr, __notify_one ? 1 : INT_MAX);
+}
+
 #elif defined(__APPLE__) && defined(_LIBCPP_USE_ULOCK)
 
 extern "C" int __ulock_wait(
diff --git a/libcxx/src/experimental/tzdb.cpp b/libcxx/src/experimental/tzdb.cpp
index d22de21c9..9e77b7dc6 100644
--- a/libcxx/src/experimental/tzdb.cpp
+++ b/libcxx/src/experimental/tzdb.cpp
@@ -48,7 +48,7 @@ namespace chrono {
 // This function is weak so it can be overriden in the tests. The
 // declaration is in the test header test/support/test_tzdb.h
 _LIBCPP_WEAK string_view __libcpp_tzdb_directory() {
-#if defined(__linux__)
+#if defined(__linux__) || defined(__crescent__)
   return "/usr/share/zoneinfo/";
 #else
 #  error "unknown path to the IANA Time Zone Database"
diff --git a/libcxx/src/include/config_elast.h b/libcxx/src/include/config_elast.h
index 7edff2d93..b7cac5fe6 100644
--- a/libcxx/src/include/config_elast.h
+++ b/libcxx/src/include/config_elast.h
@@ -35,6 +35,8 @@
 // No _LIBCPP_ELAST needed on Emscripten
 #elif defined(__linux__) || _LIBCPP_HAS_MUSL_LIBC
 #  define _LIBCPP_ELAST 4095
+#elif defined(__crescent__)
+// No _LIBCPP_ELAST needed on Crescent
 #elif defined(__APPLE__)
 // No _LIBCPP_ELAST needed on Apple
 #elif defined(__MVS__)
-- 
2.45.2

